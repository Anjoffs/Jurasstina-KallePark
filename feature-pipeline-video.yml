steps:

  # 1Ô∏è‚É£ Installera dependencies
  - template: templates/install-dependencies.yaml

  # 2Ô∏è‚É£ Installera Xvfb & ffmpeg
  - script: |
      sudo apt-get update
      sudo apt-get install -y xvfb ffmpeg
    displayName: 'Install Xvfb & ffmpeg'

  # 3Ô∏è‚É£ Starta Xvfb (Virtuell sk√§rm)
  - script: |
      Xvfb :99 -screen 0 1920x1080x24 &
      echo "export DISPLAY=:99" >> ~/.bashrc
      export DISPLAY=:99
    displayName: 'Start Xvfb'

  # 4Ô∏è‚É£ Starta videoinspelningen
  - script: |
      ffmpeg -y -video_size 1920x1080 -framerate 30 -f x11grab -i :99 -codec:v libx264 -preset ultrafast results/test_run.mp4 &
      echo $! > results/ffmpeg_pid.txt
    displayName: 'Start video recording'

  # 5Ô∏è‚É£ üÜï Debugga om Chrome k√∂rs innan testerna startas
  - script: ps aux | grep chrome
    displayName: 'Check if Chrome is running'

  # 6Ô∏è‚É£ K√∂r Robot Framework-testerna
  - script: |
      export DISPLAY=:99
      robot --include new-feature-video --output results/logs/output_feature_test.xml --log results/logs/log_feature_test.html --report results/logs/report_feature_test.html tests/
    displayName: 'Run Tests tagged with new-feature-video'

  # 7Ô∏è‚É£ Stoppa videoinspelningen (√§ven om testet failar)
  - script: |
      if [ -f results/ffmpeg_pid.txt ]; then
        kill $(cat results/ffmpeg_pid.txt)
      fi
    displayName: 'Stop video recording'
    condition: always()

  # 8Ô∏è‚É£ Publicera testresultat och video √§ven vid fail
  - task: PublishPipelineArtifact@1
    inputs:
      targetPath: '$(System.DefaultWorkingDirectory)/results/test_run.mp4'
      artifactName: 'Test Recording'
    displayName: 'Upload test video'
    condition: always()
